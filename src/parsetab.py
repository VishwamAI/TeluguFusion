
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE ELSE EQUALS GREATER IF LBRACE LESS LPAREN MINUS NUMBER PLUS PRINT RBRACE RPAREN STRING TIMES VARIABLEstatement : VARIABLE EQUALS expressionstatement : PRINT LPAREN expression RPARENstatement : IF LPAREN expression RPAREN LBRACE statement RBRACE\n                 | IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACEexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : VARIABLEexpression : STRINGexpression : expression GREATER expression\n                  | expression LESS expression'
    
_lr_action_items = {'VARIABLE':([0,5,6,7,10,15,16,17,18,19,20,31,35,],[2,8,8,8,8,8,8,8,8,8,8,2,2,]),'PRINT':([0,31,35,],[3,3,3,]),'IF':([0,31,35,],[4,4,4,]),'$end':([1,8,9,11,12,22,24,25,26,27,28,29,30,33,37,],[0,-11,-1,-10,-12,-2,-5,-6,-7,-8,-13,-14,-9,-3,-4,]),'EQUALS':([2,],[5,]),'LPAREN':([3,4,5,6,7,10,15,16,17,18,19,20,],[6,7,10,10,10,10,10,10,10,10,10,10,]),'NUMBER':([5,6,7,10,15,16,17,18,19,20,],[11,11,11,11,11,11,11,11,11,11,]),'STRING':([5,6,7,10,15,16,17,18,19,20,],[12,12,12,12,12,12,12,12,12,12,]),'PLUS':([8,9,11,12,13,14,21,24,25,26,27,28,29,30,],[-11,15,-10,-12,15,15,15,15,15,15,15,15,15,-9,]),'MINUS':([8,9,11,12,13,14,21,24,25,26,27,28,29,30,],[-11,16,-10,-12,16,16,16,16,16,16,16,16,16,-9,]),'TIMES':([8,9,11,12,13,14,21,24,25,26,27,28,29,30,],[-11,17,-10,-12,17,17,17,17,17,17,17,17,17,-9,]),'DIVIDE':([8,9,11,12,13,14,21,24,25,26,27,28,29,30,],[-11,18,-10,-12,18,18,18,18,18,18,18,18,18,-9,]),'GREATER':([8,9,11,12,13,14,21,24,25,26,27,28,29,30,],[-11,19,-10,-12,19,19,19,19,19,19,19,19,19,-9,]),'LESS':([8,9,11,12,13,14,21,24,25,26,27,28,29,30,],[-11,20,-10,-12,20,20,20,20,20,20,20,20,20,-9,]),'RBRACE':([8,9,11,12,22,24,25,26,27,28,29,30,32,33,36,37,],[-11,-1,-10,-12,-2,-5,-6,-7,-8,-13,-14,-9,33,-3,37,-4,]),'RPAREN':([8,11,12,13,14,21,24,25,26,27,28,29,30,],[-11,-10,-12,22,23,30,-5,-6,-7,-8,-13,-14,-9,]),'LBRACE':([23,34,],[31,35,]),'ELSE':([33,],[34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,31,35,],[1,32,36,]),'expression':([5,6,7,10,15,16,17,18,19,20,],[9,13,14,21,24,25,26,27,28,29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> VARIABLE EQUALS expression','statement',3,'p_statement_assign','parser.py',47),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_print','parser.py',51),
  ('statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE','statement',7,'p_statement_if','parser.py',55),
  ('statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE','statement',11,'p_statement_if','parser.py',56),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',63),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',64),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',65),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',66),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',70),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',74),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','parser.py',78),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',82),
  ('expression -> expression GREATER expression','expression',3,'p_expression_comparison','parser.py',86),
  ('expression -> expression LESS expression','expression',3,'p_expression_comparison','parser.py',87),
]
