// తెలుగుఫ్యూజన్ సమగ్ర పరీక్ష కేసులు

దిగుమతి వ్యవస్థ
దిగుమతి గణితం
దిగుమతి డేటాబేస్
దిగుమతి వెబ్
దిగుమతి ఏజెంట్

// 1. అధునాతన రకాల వ్యవస్థ పరీక్షలు
ప్రమేయం రకాల_వ్యవస్థ_పరీక్షలు() {
    // 1.1 స్థిర టైపింగ్
    చర సంఖ్య: పూర్ణం = 5
    చర దశాంశం: తేలియాడు = 3.14
    అభ్యర్థించు(రకం(సంఖ్య) == పూర్ణం && రకం(దశాంశం) == తేలియాడు, "స్థిర టైపింగ్ విఫలమైంది")

    // 1.2 గతిశీల టైపింగ్
    చర గతిశీలం = 10
    గతిశీలం = "తెలుగుఫ్యూజన్"
    అభ్యర్థించు(రకం(గతిశీలం) == వాక్యం, "గతిశీల టైపింగ్ విఫలమైంది")

    // 1.3 జెనెరిక్ రకాలు
    జాబితా<పూర్ణం> సంఖ్యలు = [1, 2, 3, 4, 5]
    అభ్యర్థించు(రకం(సంఖ్యలు) == జాబితా<పూర్ణం>, "జెనెరిక్ రకాలు విఫలమైంది")

    // 1.4 రకం అనుమానం
    చర అనుమానితం = 42
    అభ్యర్థించు(రకం(అనుమానితం) == పూర్ణం, "రకం అనుమానం విఫలమైంది")
}

// 2. సమకాలీన మోడల్ పరీక్షలు
ప్రమేయం సమకాలీన_పరీక్షలు() {
    // 2.1 సమాంతర ప్రక్రియలు
    ప్రమేయం కార్యం1() -> పూర్ణం { తిరిగిఇవ్వు 1 }
    ప్రమేయం కార్యం2() -> పూర్ణం { తిరిగిఇవ్వు 2 }
    చర ఫలితం = సమాంతరం(కార్యం1(), కార్యం2())
    అభ్యర్థించు(ఫలితం == [1, 2], "సమాంతర ప్రక్రియలు విఫలమైంది")

    // 2.2 ఛానెల్స్
    చర ఛానెల్ = ఛానెల్సృష్టించు<పూర్ణం>()
    ఛానెల్.పంపు(5)
    చర స్వీకరించినది = ఛానెల్.స్వీకరించు()
    అభ్యర్థించు(స్వీకరించినది == 5, "ఛానెల్స్ విఫలమైంది")
}

// 3. అధునాతన గణిత కార్యకలాపాల పరీక్షలు
ప్రమేయం గణిత_పరీక్షలు() {
    // 3.1 మాట్రిక్స్ గుణకారం
    చర మాట్రిక్స్1 = [[1, 2], [3, 4]]
    చర మాట్రిక్స్2 = [[5, 6], [7, 8]]
    చర ఫలితం = గణితం.మాట్రిక్స్_గుణకారం(మాట్రిక్స్1, మాట్రిక్స్2)
    అభ్యర్థించు(ఫలితం == [[19, 22], [43, 50]], "మాట్రిక్స్ గుణకారం విఫలమైంది")

    // 3.2 సాంఖ్యిక పరిక్రియలు
    చర డేటా = [1, 2, 3, 4, 5]
    చర సగటు = గణితం.సగటు(డేటా)
    చర ప్రమాణవ్యతిరేకం = గణితం.ప్రమాణవ్యతిరేకం(డేటా)
    అభ్యర్థించు(సగటు == 3 && ప్రమాణవ్యతిరేకం ≈ 1.4142, "సాంఖ్యిక పరిక్రియలు విఫలమైంది")
}

// 4. ఏజెంట్-ఆధారిత ప్రవర్తన పరీక్షలు
ప్రమేయం ఏజెంట్_పరీక్షలు() {
    ఏజెంట్ రోబో {
        చర స్థానం = 0
        ప్రమేయం కదులు(పూర్ణం దూరం) {
            స్థానం += దూరం
        }
        ప్రమేయం స్థితిపొందు() -> వాక్యం {
            తిరిగిఇవ్వు "స్థానం: " + స్థానం
        }
    }

    చర రోబో1 = రోబో()
    చర రోబో2 = రోబో()

    రోబో1.కదులు(5)
    రోబో2.కదులు(3)

    అభ్యర్థించు(రోబో1.స్థానం == 5 && రోబో2.స్థానం == 3, "ఏజెంట్ కదలిక విఫలమైంది")
    అభ్యర్థించు(రోబో1.స్థితిపొందు() == "స్థానం: 5" && రోబో2.స్థితిపొందు() == "స్థానం: 3", "ఏజెంట్ స్థితి పొందడం విఫలమైంది")
}

// 5. వెబ్ అభివృద్ధి సామర్థ్యాల పరీక్షలు
ప్రమేయం వెబ్_పరీక్షలు() {
    చర సర్వర్ = వెబ్.సర్వర్_సృష్టించు()
    సర్వర్.మార్గం("/", ప్రమేయం (అభ్యర్థన, ప్రతిస్పందన) {
        ప్రతిస్పందన.పంపు("నమస్కారం, ప్రపంచం!")
    })
    సర్వర్.మార్గం("/వినియోగదారు/{id}", ప్రమేయం (అభ్యర్థన, ప్రతిస్పందన) {
        చర id = అభ్యర్థన.ప్యారామీటర్పొందు("id")
        ప్రతిస్పందన.JSON_పంపు({"id": id, "పేరు": "వినియోగదారు" + id})
    })

    చర ప్రతిస్పందన1 = వెబ్.అభ్యర్థన_పంపు("http://localhost:8080/")
    అభ్యర్థించు(ప్రతిస్పందన1 == "నమస్కారం, ప్రపంచం!", "సాధారణ మార్గం విఫలమైంది")

    చర ప్రతిస్పందన2 = వెబ్.అభ్యర్థన_పంపు("http://localhost:8080/వినియోగదారు/123")
    అభ్యర్థించు(ప్రతిస్పందన2 == {"id": "123", "పేరు": "వినియోగదారు123"}, "డైనమిక్ మార్గం విఫలమైంది")
}

// 6. డేటాబేస్ పరీక్షలు
ప్రమేయం డేటాబేస్_పరీక్షలు() {
    చర డీబీ = డేటాబేస్.అనుసంధానించు("sqlite:///:memory:")

    // టేబుల్ సృష్టించు
    డీబీ.అమలుచేయి("CREATE TABLE వినియోగదారులు (id INTEGER PRIMARY KEY, పేరు TEXT, వయస్సు INTEGER)")

    // డేటా చేర్చు
    డీబీ.చేర్చు("వినియోగదారులు", {"పేరు": "రాము", "వయస్సు": 30})
    డీబీ.చేర్చు("వినియోగదారులు", {"పేరు": "సీత", "వయస్సు": 28})

    // డేటా పొందు
    చర ఫలితాలు = డీబీ.ప్రశ్న("SELECT * FROM వినియోగదారులు WHERE వయస్సు > 25")
    అభ్యర్థించు(ఫలితాలు.పొడవు() == 2, "డేటాబేస్ ప్రశ్న విఫలమైంది")

    // డేటా నవీకరించు
    డీబీ.నవీకరించు("వినియోగదారులు", {"పేరు": "రాము"}, {"వయస్సు": 31})
    చర నవీకృతఫలితం = డీబీ.ప్రశ్న("SELECT వయస్సు FROM వినియోగదారులు WHERE పేరు = 'రాము'")
    అభ్యర్థించు(నవీకృతఫలితం[0]["వయస్సు"] == 31, "డేటాబేస్ నవీకరణ విఫలమైంది")

    // డేటా తొలగించు
    డీబీ.తొలగించు("వినియోగదారులు", {"పేరు": "సీత"})
    చర మిగిలినఫలితాలు = డీబీ.ప్రశ్న("SELECT * FROM వినియోగదారులు")
    అభ్యర్థించు(మిగిలినఫలితాలు.పొడవు() == 1, "డేటాబేస్ తొలగింపు విఫలమైంది")
}

// 7. యూనికోడ్ మద్దతు పరీక్షలు
ప్రమేయం యూనికోడ్_పరీక్షలు() {
    // 7.1 తెలుగు గుర్తింపుదారులు
    చర తెలుగుచర = 10
    అభ్యర్థించు(తెలుగుచర == 10, "తెలుగు గుర్తింపుదారు విఫలమైంది")

    // 7.2 తెలుగు వ్యాఖ్యలు
    // ఇది ఒక తెలుగు వ్యాఖ్య
    అభ్యర్థించు(నిజం, "తెలుగు వ్యాఖ్య విఫలమైంది")

    // 7.3 తెలుగు స్ట్రింగ్‌లు
    చర తెలుగుపదం = "నమస్కారం"
    అభ్యర్థించు(తెలుగుపదం == "నమస్కారం", "తెలుగు స్ట్రింగ్ విఫలమైంది")
}

// 8. స్థానికీకరణ పరీక్షలు
ప్రమేయం స్థానికీకరణ_పరీక్షలు() {
    చర తేదీ = స్థానికీకరణ.తేదీఫార్మాట్(2023, 5, 15)
    అభ్యర్థించు(తేదీ == "15 మే 2023", "తేదీ స్థానికీకరణ విఫలమైంది")

    చర సంఖ్య = స్థానికీకరణ.సంఖ్యఫార్మాట్(1234567.89)
    అభ్యర్థించు(సంఖ్య == "12,34,567.89", "సంఖ్య స్థానికీకరణ విఫలమైంది")
}

// ప్రధాన పరీక్ష ప్రమేయం
ప్రమేయం ప్రధానం() {
    రకాల_వ్యవస్థ_పరీక్షలు()
    సమకాలీన_పరీక్షలు()
    గణిత_పరీక్షలు()
    ఏజెంట్_పరీక్షలు()
    వెబ్_పరీక్షలు()
    డేటాబేస్_పరీక్షలు()
    యూనికోడ్_పరీక్షలు()
    స్థానికీకరణ_పరీక్షలు()
    వ్యవస్థ.బయటకు << "అన్ని పరీక్షలు విజయ‌వంతంగా పూర్తయ్యాయి!" << వ్యవస్థ.ముగింపుపంక్తి
}
